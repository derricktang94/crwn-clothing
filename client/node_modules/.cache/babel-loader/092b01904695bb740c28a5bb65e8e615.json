{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport '../../firebase/';\nimport { ShopActionTypes } from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/derricktang/React-course/crwn-clothing/src/redux/shop/shop.saga.js"],"names":["takeEvery","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","firestore","collection","get","then","snapshot","collectionsMap","convertCollectionsSnapshotToMap","dispatch","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","fetchCollectionsStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,OAAe,iBAAf;AAEA,SAASC,eAAT,QAAgC,cAAhC;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB;AAGIF,EAAAA,aAAa,CAACG,GAAd,GACKC,IADL,CACWC,QAAD,IAAc;AAChB,UAAMC,cAAc,GAAGC,+BAA+B,CAACF,QAAD,CAAtD;AACAG,IAAAA,QAAQ,CAACC,uBAAuB,CAACH,cAAD,CAAxB,CAAR;AACH,GAJL,EAIOI,KAJP,CAIaC,KAAK,IAAIH,QAAQ,CAACI,uBAAuB,CAACD,KAAD,CAAxB,CAJ9B;AAKP;AAED,OAAO,UAAUE,qBAAV,GAAkC;AACrC,QAAMlB,SAAS,CACXC,eAAe,CAACkB,sBADL,EAEXjB,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\n\nimport {} from '../../firebase/'\n\nimport { ShopActionTypes } from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n    yield console.log('I am fired');\n\n    const collectionRef = firestore.collection('collections');\n\n\n        collectionRef.get()\n            .then((snapshot) => {\n                const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n                dispatch(fetchCollectionsSuccess(collectionsMap));\n            }).catch(error => dispatch(fetchCollectionsFailure(error)));\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTION_START,\n        fetchCollectionsAsync\n    )\n}"]},"metadata":{},"sourceType":"module"}